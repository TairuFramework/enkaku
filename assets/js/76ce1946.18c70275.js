"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["6087"],{5931:function(e,t,r){r.r(t),r.d(t,{default:()=>c,frontMatter:()=>a,metadata:()=>n,assets:()=>p,toc:()=>h,contentTitle:()=>i});var n=JSON.parse('{"id":"guides/http-transports","title":"HTTP transports","description":"Enkaku provides two different packages to be used by the client and server for HTTP communications.","source":"@site/docs/guides/http-transports.mdx","sourceDirName":"guides","slug":"/guides/http-transports","permalink":"/docs/guides/http-transports","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Authenticated HTTP API","permalink":"/docs/examples/authenticated-db-access"},"next":{"title":"Custom transports","permalink":"/docs/guides/custom-transports"}}'),s=r("5367"),o=r("3953");let a={},i="HTTP transports",p={},h=[{value:"Client transport",id:"client-transport",level:2},{value:"Server transport",id:"server-transport",level:2},{value:"Usage with NodeJS",id:"usage-with-nodejs",level:3}];function d(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"http-transports",children:"HTTP transports"})}),"\n",(0,s.jsx)(t.p,{children:"Enkaku provides two different packages to be used by the client and server for HTTP communications."}),"\n",(0,s.jsx)(t.h2,{id:"client-transport",children:"Client transport"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsxs)(t.a,{href:"/docs/api/http-client-transport/",children:[(0,s.jsx)(t.code,{children:"@enkaku/http-client-transport"})," package"]})," provides a transport over HTTP using the ",(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API",children:"Fetch API"})," and if needed an ",(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/EventSource",children:(0,s.jsx)(t.code,{children:"EventSource"})})," for stateful interactions."]}),"\n",(0,s.jsx)(t.h2,{id:"server-transport",children:"Server transport"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsxs)(t.a,{href:"/docs/api/http-server-transport/",children:[(0,s.jsx)(t.code,{children:"@enkaku/http-server-transport"})," package"]})," provides a transport serving HTTP requests and forwarding them to the attached Enkaku server."]}),"\n",(0,s.jsxs)(t.p,{children:["The HTTP server transport provides a ",(0,s.jsxs)(t.a,{href:"/docs/api/http-server-transport/#fetch",children:[(0,s.jsx)(t.code,{children:"fetch"})," method"]})," compliant with the ",(0,s.jsx)(t.a,{href:"https://fetch.spec.whatwg.org/",children:"WinterCG Fetch specification"}),", which is supported by various JS runtimes."]}),"\n",(0,s.jsx)(t.p,{children:"The following example shows how to use it in Deno:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import { ServerTransport } from 'https://esm.sh/@enkaku/http-server-transport'\nimport { serve } from 'https://esm.sh/@enkaku/server'\n\nconst transport = new ServerTransport()\nserve({\n  handlers: {\n    'example:request': () => {\n      return { test: true }\n    },\n  },\n  public: true,\n  // The transport must be passed to the Enkaku server\n  transport,\n})\n\n// The transport can be used as default export, Deno using its `fetch` method\nexport default transport\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Using the server transport in Val Town is similar, only exposing the ",(0,s.jsx)(t.code,{children:"fetch"})," method as default export, as ",(0,s.jsx)(t.a,{href:"https://www.val.town/v/paul_lecam/EnkakuServerExample",children:"presented in this example"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"usage-with-nodejs",children:"Usage with NodeJS"}),"\n",(0,s.jsxs)(t.p,{children:["NodeJS needs an adapter such as ",(0,s.jsx)(t.a,{href:"https://github.com/honojs/node-server",children:"Hono's node server"})," to adapt the requests and responses:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import { ServerTransport } from '@enkaku/http-server-transport'\nimport { serve } from '@enkaku/server'\nimport { serve as serveHTTP } from '@hono/node-server'\n\nconst transport = new ServerTransport()\nserve({\n  handlers: {\n    'example:request': () => {\n      return { test: true }\n    },\n  },\n  public: true,\n  // The transport must be passed to the Enkaku server\n  transport,\n})\n\n// Provide the transport's `fetch` method as a handler for Hono's adapter\nconst httpServer = serveHTTP({ fetch: transport.fetch })\n"})})]})}function c(e={}){let{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},3953:function(e,t,r){r.d(t,{Z:function(){return i},a:function(){return a}});var n=r(3800);let s={},o=n.createContext(s);function a(e){let t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);